
name: test-build-deploy
run-name: Build transcode project into a docker image
on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  REGISTRY_REGION: eu-north-1
  SERVICE_REGION: us-east-1
  SERVICE_REPOSITORY_NAME: my-transcoding-example_uploader
  SERVICE_CONTAINER_NAME: uploader
  ECS_SERVICE_NAME: uploader-app
  ECS_CLUSTER_NAME: my-transcoding-exampleEcs

jobs:
#  test:
#    runs-on: ubuntu-latest
#    permissions:
#      id-token: write
#      contents: read
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#
#      - name: Set up Go
#        uses: actions/setup-go@v4
#        with:
#          go-version: '1.21.5'
#
#      - name: Start LocalStack
#        uses: LocalStack/setup-localstack@main
#        with:
#          image-tag: 'latest'
#          install-awslocal: 'true'
#
#      - name: Creating Default Services
#        run: |
#          awslocal s3 mb s3://abboud131231231231namir-uploader-bucket
#          echo "Localstack is ready!"
#
#      - name: Test
#        run: go test ./...

  build:
    runs-on: ubuntu-latest
#    needs: test
    outputs:
      image: ${{ steps.build-image.outputs.image }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: ${{ secrets.roleArn }}
          aws-region: ${{ env.REGISTRY_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: ${{ env.SERVICE_REPOSITORY_NAME }}
        run: |
          docker build -f docker/Dockerfile -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$REGISTRY/$REPOSITORY:$IMAGE_TAG"

  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger the ansible service tag in the infrastructure repo
        run: |
          repo_name="go-transcoder/infrastructure"  
          workflow_id="triggered.yml"
          
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$repo_name/actions/workflows/triggered.yml/dispatches" \
            -d '{"ref":"main","inputs":{"tags":"publisher", "extra-vars": "publisher_docker_image_url=${{ needs.build.outputs.image }}"}}'